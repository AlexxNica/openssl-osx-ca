#!/bin/bash

usage() {
	echo "$(basename $0) [-h|--help] [-path osx-ca-certs] [\`which brew\`]"
}

osx_ca_certs=osx-ca-certs

while [ ! $# -eq 0 ]; do
	case "$1" in
		-h|--help)
			usage
			exit 1
			;;
		-path)
			shift
			osx_ca_certs=$1
			;;
		*brew)
			brew=$1
			;;
		*)
			echo "Unknown argument: $1" >&2
			exit 1
			;;
	esac
	shift
done

if [[ "${brew}" = "" ]]; then
	brew=$(which brew)
fi

if [[ ! -x "${brew}" ]]; then
	echo "Homebrew not in PATH or given arguments, cannot continue"
	usage
	exit 1
fi

exitcode=0
err() {
	if [[ -d $1 ]]; then
		rm -r "${1}"
	fi

	exitcode=$(($exitcode + 1))
}

genbundle() {
	local sslimpl=$1

	local list=$($brew list $sslimpl 2>/dev/null)
	[[ -z $list ]] && continue

	local openssl=$(echo "$list" | grep bin/openssl | head -n 1)

	[[ "${openssl}" = "" ]] && echo "Homebrew $sslimpl not found" && err && return 1

	local openssldir=$($openssl version -d | cut -d '"' -f 2)

	[[ "${openssldir}" = "" ]] && echo "$sslimpl directory not found" && err && return 1

	local tmpdir=$(/usr/bin/mktemp -d -t openssl_osx_ca)

	[[ "${tmpdir}" = "" ]] && echo "mktemp failed" && err "${tmpdir}" && return 1

	local certs="${tmpdir}/cert.pem"
	$osx_ca_certs > $certs

	d1=$($openssl md5 ${openssldir}/cert.pem | awk '{print $2}')
	d2=$($openssl md5 ${tmpdir}/cert.pem | awk '{print $2}')

	if [[ "${d1}" = "${d2}" ]]; then
		logger -t "$(basename $0)" "${openssldir}/cert.pem up to date"
	else

		# Note: there's no c_rehash bundled with libressl, the bundle is still
		# produced, so carry on as normal and just produce a bundle in the standard
		# location.
		local c_rehash=$(echo "$list" | grep bin/c_rehash | head -n 1)
		if [[ -n $c_rehash ]]; then
			if ! $c_rehash -- $tmpdir > /dev/null; then
				logger -t "$(basename $0)" "${openssldir}/cert.pem updated failed, see cron"

				echo "rehash failed to verify, something is wrong"
				echo "check ${tmpdir}/cert.pem for problems"
				err "${tmpdir}" && return 1
			fi
		fi

		# XXX: I don't think this is atomic on OSX, but it's as close as we're going to
		# get without a lot more work.
		mv -f ${tmpdir}/* ${openssldir}/

		logger -t "$(basename $0)" "${openssldir}/cert.pem updated"
	fi

	rm -r "${tmpdir}"
}

for sslimpl in openssl libressl; do
	genbundle $sslimpl
done

exit $exitcode
